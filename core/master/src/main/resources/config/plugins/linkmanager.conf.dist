################################################################################
#	Link Manager
#
#	This will create links for specific types of LinkManager Types.
#	All Types have the following attributes:
#
#	x.type = The type of LinkManager you want to run
#	x.dirname = The dirname where you want the links to show up.  Use % for Section Dir
#	x.section = The section you want to scan for LinkTypes. Use * for all section
#	x.exclude = Regex format to Exclude Dirs from Path
#	x.sectionexclude = Regex format to Exclude Sections from Types
#	x.deleteon = Delete links on what commands (RMD/DEL/WIPE/NUKE/*)
#	x.addparentdir = A Regex representation to added these folder as a child of the parent release 
#	x.linkname = How you want the linkname to look. ${dirname} ${section}
#
################################################################################

################################################################################
#	LATESTDIR:
#
#	This will just make links of last races (by default 10, check latestdir.conf to change)
#
#	x.type=LATESTDIR
#	x.dirname=/_LAST_RACES_
#	x.section=*
#	x.exclude=
#	x.sectionexclude=^(?i)(pre|staff|speedtests)$
#	x.deleteon=*
#	x.linkname=(last)-${dirname}
#	x.addparentdir=^(?i)(((cd|dvd|dis[ck])[1-9])|sample|subs|rarfix)$
#
################################################################################

################################################################################
#	NFOMISSING:
#
#	This will find all directories excluding the REGEX set that do not
#	have an NFO and place a create a link to said directory in /_NO_NFO_
#
#	x.addparentdir is used for only adding a missing link to folders
#	that have a match here, or a folder with no subfolders.
#	IE: /section1/sub-section1/rls1 - we don't want a no-nfo for sub-section1
#
#	x.type=NFOMISSING
#	x.dirname=/_NO_NFO_
#	x.section=*
#	x.exclude=^/(.*)/(?i)(((cd|dvd|dis[ck])[1-9])|sample|subs|rarfix)$
#	x.sectionexclude=^(?i)(pre|staff|speedtests)$
#	x.deleteon=*
#	x.linkname=(no-nfo)-${dirname}
#	x.addparentdir=^(?i)(((cd|dvd|dis[ck])[1-9])|sample|subs|rarfix)$
#
################################################################################

################################################################################
#	SFVINCOMPLETE:
#
#	This will find all directories that are incomplete and not Excluded
#	using a .sfv file and place a link to said directory in /_INCOMPLETES_
#
#	x.type=SFVINCOMPLETE
#	x.dirname=/_INCOMPLETES_
#	x.section=*
#	x.exclude=
#	x.sectionexclude=^(?i)(pre|staff|speedtests)$
#	x.deleteon=*
#	x.linkname=(incomplete)-${dirname}
#	x.addparentdir=^(?i)(((cd|dvd|dis[ck])[1-9])|sample|subs|rarfix)$
#
#	This will find all directories that are incomplete and not Excluded
#	using a .sfv file and place a link in the parent directory
#	IE. /section/rls1 is incomplete - link will be /section/(incomplete)-rls1
#	IE. /section/rls1/cd1 is incomplete - link will be /section/(incomplete)-rls1-cd1
#
#	x.type=SFVINCOMPLETE
#	x.dirname=% 
#	x.section=*    
#	x.exclude=
#	x.sectionexclude=^(?i)(pre|staff|speedtests)$
#	x.deleteon=*   
#	x.linkname=(incomplete)-${dirname}
#	x.addparentdir=^/(.*)/((cd|dvd|dis[ck])[1-9])$
#
################################################################################

################################################################################
#	SFVMISSING:
#
#	This will find all directories excluding the REGEX set that do not
#	have an SFV and place a create a link to said directory in /_NO_SFV_
#
#	x.addparentdir is used for removing links to no-sfv files if CD1 exists
#	IE: /section1/rls1/cd1 - we don't want a no-sfv for rls1
#
#	x.type=SFVMISSING
#	x.dirname=/_NO_SFV_
#	x.section=*
#	x.exclude=^/(.*)/(?i)(sample|nfofix|subs)$
#	x.sectionexclude=^(?i)(pre|staff|speedtests)$
#	x.deleteon=*
#	x.linkname=(no-sfv)-${section}-${dirname}
#	x.addparentdir=^(?i)(((cd|dvd|dis[ck])[1-9]))$
#
################################################################################

################################################################################
#	ZIPINCOMPLETE:
#
#	This will find all directories that are incomplete and not Excluded
#	using a .zip file and place a link to said directory in /_INCOMPLETES_
#
#	x.type=ZIPINCOMPLETE
#	x.dirname=/_INCOMPLETES_
#	x.section=*
#	x.exclude=
#	x.sectionexclude=^(?i)(pre|staff|speedtests)$
#	x.deleteon=*
#	x.linkname=(incomplete)-${dirname}
#	x.addparentdir=^(?i)(((cd|dvd|dis[ck])[1-9])|sample|subs|rarfix)$
#
#	This will find all directories that are incomplete and not Excluded
#	using a .zip file and place a link in the parent directory
#	IE. /section/rls1 is incomplete - link will be /section/(incomplete)-rls1
#	IE. /section/rls1/cd1 is incomplete - link will be /section/(incomplete)-rls1-cd1
#
#	x.type=ZIPINCOMPLETE
#	x.dirname=% 
#	x.section=*    
#	x.exclude=
#	x.sectionexclude=^(?i)(pre|staff|speedtests)$
#	x.deleteon=*   
#	x.linkname=(incomplete)-${dirname}
#	x.addparentdir=^/(.*)/((cd|dvd|dis[ck])[1-9])$
#
################################################################################

